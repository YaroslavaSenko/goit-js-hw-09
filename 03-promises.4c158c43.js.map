{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAClC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEnBA,E,IAZIQ,SAASC,cAAc,SAC/BC,iBAAiB,UAetB,SAAoBC,GAClBA,EAAIC,iBASJ,IAPA,IAEqBC,EAAjBF,EAAIG,cADNC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAEvBC,EAAeC,OAAOJ,EAAMK,OAC5BC,EAAcF,OAAOH,EAAKI,OAC1BE,EAAgBH,OAAOF,EAAOG,OAEzBG,EAAW,EAAGA,GAAYD,EAAeC,GAAY,EAC5D1B,EAAc0B,EAAUL,GAErBM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGvE+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAEvEmB,GAAgBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\nform.addEventListener(\"submit\", onFormData);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n      return new Promise((resolve, reject) => {\n      setTimeout(() => { \n        if (shouldResolve) {\n          resolve({position, delay});\n        } else {\n          reject({position, delay});\n        }\n      }, delay)\n  })\n  }\n\nfunction onFormData(evt) {\n  evt.preventDefault()\n\n  let {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n  let enteredDelay = Number(delay.value);\n  let enteredStep = Number(step.value);\n  let enteredAmount = Number(amount.value);\n\n  for (let position = 1; position <= enteredAmount; position += 1) {\n    createPromise(position, enteredDelay)\n\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n    enteredDelay += enteredStep;\n  }\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","enteredDelay","Number","value","enteredStep","enteredAmount","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.4c158c43.js.map"}